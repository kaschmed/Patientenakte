/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package kaschmed;

import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.io.InputStreamReader;
import java.sql.*;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.SpringLayout;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author Francesca Kaschnig
 */
public class Benutzeroberflaeche extends javax.swing.JDialog {

    java.awt.Frame parent;
    InputStreamReader streamReader;
    private final JFileChooser openFileChooser;
    private BufferedImage originalBI;

    /**
     * Creates new form Benutzeroberflaeche
     */
    public Benutzeroberflaeche(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        this.parent = parent;
        initComponents();
        showUser();
        streamReader = new InputStreamReader(System.in);
        openFileChooser = new JFileChooser();
        openFileChooser.setCurrentDirectory(new File("c:\\"));
        openFileChooser.setFileFilter(new FileNameExtensionFilter("JPG PNG GIF Images", "jpg", "bmp", "gif", "png"));
    }

    public ArrayList<Patient> userList() {
        ArrayList<Patient> patientList = new ArrayList<>();
//     Connection con = null;
        try {
//            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String url = ("jdbc:mysql://localhost:3306/patientenliste?"
                    + "user=root&password=root");
            Connection con = DriverManager.getConnection(url);
            String query1 = "SELECT * FROM patienten";
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(query1);
            Patient pat;
            while (rs.next()) {
                pat = new Patient(rs.getString("Vornamen"), rs.getString("Nachname"), rs.getLong("Telefonnummer"), rs.getLong("SVN"), rs.getString("Geschlecht"));
                patientList.add(pat);
            }
        } catch (SQLException ex) {
            Logger.getLogger(Benutzeroberflaeche.class.getName()).log(Level.SEVERE, null, ex);
        }
//        catch (ClassNotFoundException ex) {
//            Logger.getLogger(Benutzeroberflaeche.class.getName()).log(Level.SEVERE, null, ex);
//        }
        return patientList;
    }

    public void showUser() {
        ArrayList<Patient> list = userList();
        DefaultTableModel model = (DefaultTableModel) workBench.getModel();
        Object[] row = new Object[5];
        for (int i = 0; i < list.size(); i++) {

            row[0] = list.get(i).getVorname();
            row[1] = list.get(i).getNachname();
            row[2] = list.get(i).getsVN();
            row[3] = list.get(i).getGeschlecht();
            row[4] = list.get(i).getTelefonNr();
            model.addRow(row);
        }
    }

    public void executeSQLQuery(String query, String message) throws SQLException {
        String url = ("jdbc:mysql://localhost:3306/patientenliste?"
                + "user=root&password=root");
        Connection con = DriverManager.getConnection(url);
        Statement st;
        try {
            st = con.createStatement();
            if ((st.executeUpdate(query))==0) {
                JOptionPane.showMessageDialog(null, "Data " + message + "Successfully");
            } else {
                JOptionPane.showMessageDialog(null, "Data Not " + message);
            }

        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jInternalFrame1 = new javax.swing.JInternalFrame();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        workBench = new javax.swing.JTable();
        edit = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        newPat = new javax.swing.JButton();
        connect = new javax.swing.JButton();
        save = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        zuVN = new javax.swing.JTextField();
        zuNN = new javax.swing.JTextField();
        zuSVN = new javax.swing.JTextField();
        zuGeschl = new javax.swing.JTextField();
        zuTele = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        options = new javax.swing.JMenu();
        saveAs = new javax.swing.JMenuItem();
        print = new javax.swing.JMenuItem();
        openPic = new javax.swing.JMenuItem();
        help = new javax.swing.JMenu();
        about = new javax.swing.JMenuItem();
        instructions = new javax.swing.JMenuItem();
        exit = new javax.swing.JMenu();
        exitOption = new javax.swing.JMenuItem();

        jInternalFrame1.setVisible(true);

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane1.setName(""); // NOI18N

        workBench.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Vorname", "Nachname", "SVN", "Telefonnummer", "Geschlecht"
            }
        ));
        workBench.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                workBenchMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(workBench);

        edit.setBackground(java.awt.SystemColor.textHighlight);
        edit.setForeground(new java.awt.Color(255, 255, 255));
        edit.setText("Update...");
        edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editActionPerformed(evt);
            }
        });

        delete.setBackground(java.awt.SystemColor.textHighlight);
        delete.setForeground(new java.awt.Color(255, 255, 255));
        delete.setText("Delete...");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        newPat.setBackground(java.awt.SystemColor.textHighlight);
        newPat.setForeground(new java.awt.Color(255, 255, 255));
        newPat.setText("New...");
        newPat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newPatActionPerformed(evt);
            }
        });

        connect.setBackground(java.awt.SystemColor.textHighlight);
        connect.setForeground(new java.awt.Color(255, 255, 255));
        connect.setText("Connect...");
        connect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                connectActionPerformed(evt);
            }
        });

        save.setBackground(java.awt.SystemColor.textHighlight);
        save.setForeground(new java.awt.Color(255, 255, 255));
        save.setText("Save");

        jButton1.setBackground(javax.swing.UIManager.getDefaults().getColor("textHighlight"));
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Save...");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setText("Vorname:");

        jLabel3.setText("Nachname:");

        jLabel4.setText("SVN:");

        jLabel5.setText("Telefonnummer:");

        jLabel6.setText("Geschlecht:");

        zuVN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zuVNActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(save, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 782, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(connect, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(106, 106, 106)
                        .addComponent(newPat, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(137, 137, 137)
                        .addComponent(edit, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(57, 57, 57)
                                .addComponent(zuGeschl, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(zuNN, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel2))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(35, 35, 35)
                                        .addComponent(zuVN, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(zuSVN, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(zuTele, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(zuVN, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(zuNN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(jLabel4))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(zuSVN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(zuTele, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(zuGeschl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 198, Short.MAX_VALUE)
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(edit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(connect, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(newPat, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(save, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7))
        );

        jMenuBar1.setBackground(new java.awt.Color(204, 204, 204));

        options.setText("Options");

        saveAs.setText("Save as...");
        options.add(saveAs);

        print.setText("Print...");
        options.add(print);

        openPic.setText("Open Picture...");
        openPic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openPicActionPerformed(evt);
            }
        });
        options.add(openPic);

        jMenuBar1.add(options);

        help.setText("Help");

        about.setText("About...");
        help.add(about);

        instructions.setText("Instructions...");
        help.add(instructions);

        jMenuBar1.add(help);

        exit.setText("Exit");

        exitOption.setText("exit...");
        exitOption.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitOptionActionPerformed(evt);
            }
        });
        exit.add(exitOption);

        jMenuBar1.add(exit);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_editActionPerformed

    private void exitOptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitOptionActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_exitOptionActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        // TODO add your handling code here:
        Delete delete = new Delete(parent, true);
        delete.setLocationRelativeTo(parent);
        delete.setVisible(true);

    }//GEN-LAST:event_deleteActionPerformed

    private void newPatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newPatActionPerformed
        // TODO add your handling code here:
        newPatient pat = new newPatient(parent, true);
        pat.setLocationRelativeTo(parent);
        pat.setVisible(true);
    }//GEN-LAST:event_newPatActionPerformed

    private void connectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_connectActionPerformed
        // TODO add your handling code here:
        Connection con = null;
        try {
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/patientenliste?"
                    + "user=root&password=root");
            JOptionPane.showMessageDialog(null, "Verbindung erfolgreich hergestellt!");

        } catch (SQLException ex) {
            Logger.getLogger(Benutzeroberflaeche.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Verbindung fehlgeschlagen!");
        }
        Statement meinStmt = null;
        try {
            meinStmt = con.createStatement();

        } catch (SQLException ex) {
            Logger.getLogger(Benutzeroberflaeche.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            String query = "select * from patientenliste";
            ResultSet myrs = meinStmt.executeQuery("select * from patienten");
            while (myrs.next()) {

                String bez = (myrs.getString("Vornamen") + ", " + myrs.getString("Nachname") + ", " + myrs.getString("SVN") + ", " + myrs.getString("Geschlecht") + ", " + myrs.getString("Telefonnummer"));
            }

        } catch (SQLException ex) {
            Logger.getLogger(Benutzeroberflaeche.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_connectActionPerformed

    private void openPicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openPicActionPerformed
        // TODO add your handling code here:
        int returnValue = openFileChooser.showOpenDialog(this);
        if (returnValue == JFileChooser.APPROVE_OPTION) {
            try {
                originalBI = ImageIO.read(openFileChooser.getSelectedFile());
                // String cad = openFileChooser.getCurrentDirectory() + "/" + openFileChooser.getSelectedFile().getName();
                //beenden.addTab(openFileChooser.getSelectedFile().getName(), new JLabel(new ImageIcon(originalBI)));

            } catch (IOException ioe) {
            }

        } else {
        }
    }//GEN-LAST:event_openPicActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        try {
            String query = "UPDATE patient set Nachname =" + zuNN.getText() + "SVN =" + zuSVN.getText() + "Telefonnummer=" + zuTele.getText() + "Geschlecht =" + zuGeschl.getText() + "where 1 Vorname = " + zuVN.getText();
            executeSQLQuery(query, "Updated");
        } catch (SQLException ex) {
            Logger.getLogger(Benutzeroberflaeche.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_jButton1ActionPerformed

    private void zuVNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zuVNActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_zuVNActionPerformed

    private void workBenchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_workBenchMouseClicked
        // TODO add your handling code here:
        int i = workBench.getSelectedRow();
        TableModel model = workBench.getModel();
        zuVN.setText(model.getValueAt(i, 0).toString());
        zuNN.setText(model.getValueAt(i, 1).toString());
        zuSVN.setText(model.getValueAt(i, 2).toString());
        zuTele.setText(model.getValueAt(i, 3).toString());
        zuGeschl.setText(model.getValueAt(i, 4).toString());
    }//GEN-LAST:event_workBenchMouseClicked
    public void executeSQLQuery1(String query, String message) throws SQLException {

        String url = ("jdbc:mysql://localhost:3306/patientenliste?"
                + "user=root&password=root");
        Connection con = DriverManager.getConnection(url);
        Statement st;
        try {
            st = con.createStatement();
            if ((st.executeUpdate(query)) == 1) {
                JOptionPane.showMessageDialog(null, "Data " + message + "Successfully");
            } else {
                JOptionPane.showMessageDialog(null, "Data Not " + message);
            }

        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Benutzeroberflaeche.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Benutzeroberflaeche.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Benutzeroberflaeche.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Benutzeroberflaeche.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Benutzeroberflaeche dialog = new Benutzeroberflaeche(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem about;
    private javax.swing.JButton connect;
    private javax.swing.JButton delete;
    private javax.swing.JButton edit;
    private javax.swing.JMenu exit;
    private javax.swing.JMenuItem exitOption;
    private javax.swing.JMenu help;
    private javax.swing.JMenuItem instructions;
    private javax.swing.JButton jButton1;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton newPat;
    private javax.swing.JMenuItem openPic;
    private javax.swing.JMenu options;
    private javax.swing.JMenuItem print;
    private javax.swing.JButton save;
    private javax.swing.JMenuItem saveAs;
    private javax.swing.JTable workBench;
    private javax.swing.JTextField zuGeschl;
    private javax.swing.JTextField zuNN;
    private javax.swing.JTextField zuSVN;
    private javax.swing.JTextField zuTele;
    private javax.swing.JTextField zuVN;
    // End of variables declaration//GEN-END:variables
}
